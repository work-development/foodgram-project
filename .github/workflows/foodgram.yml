name: foodgram_workflow

on:
  push:
     branches:
       - master
 
jobs:  
  build_and_push_to_dockerhub: 
    name: Push docker image to docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: sergeidocker/foodgram-project:latest
  deploy:
     runs-on: ubuntu-latest
     needs: build_and_push_to_dockerhub
     steps: 
       - uses: actions/checkout@master
       
       - name: Set up Python
         uses: actions/setup-python@v2
         with:
             python-version: 3.8
             
       - name: Install dump-env and create .env
         env:
            DB_ENGINE: ${{ secrets.DB_ENGINE }}
            DB_NAME: ${{ secrets.DB_NAME }}
            POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            DB_HOST: ${{ secrets.DB_HOST }}
            DB_PORT: ${{ secrets.DB_PORT }}
         run: |
            python -m pip install --upgrade pip
            pip install dump-env
            dump-env --template=.env.template > .env
       - name: copy files
         uses: appleboy/scp-action@master
         with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          rm: true
          source: './'
          target: "/home/sergei/foodgram-project"
          

       - name: creating and running container
         uses: appleboy/ssh-action@master
         with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: | 
           cd foodgram-project
           sudo docker stop $(sudo docker ps -a -q)
           sudo docker image prune -f
           sudo docker pull sergeidocker/foodgram-project
           sudo docker-compose up -d --force-recreate
           sudo ID_container=$(sudo docker ps -aqf "name=foodgram")
           sudo docker-compose exec -t -i ID_container python manage.py migrate



           
  send_message:
     runs-on: ubuntu-latest
     needs: deploy
     steps:
     - name: send message
       uses: appleboy/telegram-action@master
       with:
         to: ${{ secrets.TELEGRAM_TO }}
         token: ${{ secrets.TELEGRAM_TOKEN }}
         message: $ Foodgram workflow успешно выполнен!
